#include "debug"

/*  x2_mod_def_aqu
    x2_mod_def_act
    x3_mod_def_enter
    nw_o0_death
    nw_o0_dying
    x2_mod_def_equ
    nw_o0_respawn
    x2_mod_def_rest
    x2_mod_def_unequ
    x2_mod_def_unaqu */

void main()
{
  object oObject; string sEventScript;
  int nCurrentEvent = GetCurrentlyRunningEvent();                               Debug("Current Event: "+IntToString(nCurrentEvent));

  switch (nCurrentEvent)
  {
    /*
    EVENT_SCRIPT_AREA_ON_ENTER
    EVENT_SCRIPT_AREA_ON_EXIT
    EVENT_SCRIPT_AREA_ON_HEARTBEAT
    EVENT_SCRIPT_AREA_ON_USER_DEFINED_EVENT
    EVENT_SCRIPT_AREAOFEFFECT_ON_HEARTBEAT
    EVENT_SCRIPT_AREAOFEFFECT_ON_OBJECT_ENTER
    EVENT_SCRIPT_AREAOFEFFECT_ON_OBJECT_EXIT
    EVENT_SCRIPT_AREAOFEFFECT_ON_USER_DEFINED_EVENT
    EVENT_SCRIPT_CREATURE_ON_BLOCKED_BY_DOOR
    EVENT_SCRIPT_CREATURE_ON_DAMAGED
    EVENT_SCRIPT_CREATURE_ON_DEATH
    EVENT_SCRIPT_CREATURE_ON_DIALOGUE
    EVENT_SCRIPT_CREATURE_ON_DISTURBED
    EVENT_SCRIPT_CREATURE_ON_END_COMBATROUND
    EVENT_SCRIPT_CREATURE_ON_HEARTBEAT
    EVENT_SCRIPT_CREATURE_ON_MELEE_ATTACKED
    EVENT_SCRIPT_CREATURE_ON_NOTICE
    EVENT_SCRIPT_CREATURE_ON_RESTED
    EVENT_SCRIPT_CREATURE_ON_SPAWN_IN
    EVENT_SCRIPT_CREATURE_ON_SPELLCASTAT
    EVENT_SCRIPT_CREATURE_ON_USER_DEFINED_EVENT
    EVENT_SCRIPT_DOOR_ON_CLICKED
    EVENT_SCRIPT_DOOR_ON_CLOSE
    EVENT_SCRIPT_DOOR_ON_DAMAGE
    EVENT_SCRIPT_DOOR_ON_DEATH
    EVENT_SCRIPT_DOOR_ON_DIALOGUE
    EVENT_SCRIPT_DOOR_ON_DISARM
    EVENT_SCRIPT_DOOR_ON_FAIL_TO_OPEN
    EVENT_SCRIPT_DOOR_ON_HEARTBEAT
    EVENT_SCRIPT_DOOR_ON_LOCK
    EVENT_SCRIPT_DOOR_ON_MELEE_ATTACKED
    EVENT_SCRIPT_DOOR_ON_OPEN
    EVENT_SCRIPT_DOOR_ON_SPELLCASTAT
    EVENT_SCRIPT_DOOR_ON_TRAPTRIGGERED
    EVENT_SCRIPT_DOOR_ON_UNLOCK
    EVENT_SCRIPT_DOOR_ON_USERDEFINED
    EVENT_SCRIPT_ENCOUNTER_ON_ENCOUNTER_EXHAUSTED
    EVENT_SCRIPT_ENCOUNTER_ON_HEARTBEAT
    EVENT_SCRIPT_ENCOUNTER_ON_OBJECT_ENTER
    EVENT_SCRIPT_ENCOUNTER_ON_OBJECT_EXIT
    EVENT_SCRIPT_ENCOUNTER_ON_USER_DEFINED_EVENT
    EVENT_SCRIPT_MODULE_ON_ACQUIRE_ITEM
    EVENT_SCRIPT_MODULE_ON_ACTIVATE_ITEM
    EVENT_SCRIPT_MODULE_ON_CLIENT_ENTER
    EVENT_SCRIPT_MODULE_ON_CLIENT_EXIT
    EVENT_SCRIPT_MODULE_ON_EQUIP_ITEM
    EVENT_SCRIPT_MODULE_ON_HEARTBEAT
    EVENT_SCRIPT_MODULE_ON_LOSE_ITEM */

    case EVENT_SCRIPT_MODULE_ON_MODULE_LOAD:
    {
      oObject = GetModule();
      sEventScript = GetLocalString(oObject, "OnModLoad");
      ExecuteScript(sEventScript, oObject);                                     //"x2_mod_def_load"
    }
    break;

/*  EVENT_SCRIPT_MODULE_ON_NUI_EVENT
    EVENT_SCRIPT_MODULE_ON_PLAYER_CANCEL_CUTSCENE */

    case EVENT_SCRIPT_MODULE_ON_PLAYER_CHAT:
    {
      oObject = GetModule();
      sEventScript = GetLocalString(oObject, "OnModPlayerChat");
      ExecuteScript(sEventScript, oObject);                                     //""
    }
    break;

/*  EVENT_SCRIPT_MODULE_ON_PLAYER_DEATH
    EVENT_SCRIPT_MODULE_ON_PLAYER_DYING
    EVENT_SCRIPT_MODULE_ON_PLAYER_GUIEVENT
    EVENT_SCRIPT_MODULE_ON_PLAYER_LEVEL_UP
    EVENT_SCRIPT_MODULE_ON_PLAYER_REST
    EVENT_SCRIPT_MODULE_ON_PLAYER_TARGET
    EVENT_SCRIPT_MODULE_ON_PLAYER_TILE_ACTION
    EVENT_SCRIPT_MODULE_ON_RESPAWN_BUTTON_PRESSED
    EVENT_SCRIPT_MODULE_ON_UNEQUIP_ITEM
    EVENT_SCRIPT_MODULE_ON_USER_DEFINED_EVENT
    EVENT_SCRIPT_PLACEABLE_ON_CLOSED
    EVENT_SCRIPT_PLACEABLE_ON_DAMAGED
    EVENT_SCRIPT_PLACEABLE_ON_DEATH
    EVENT_SCRIPT_PLACEABLE_ON_DIALOGUE
    EVENT_SCRIPT_PLACEABLE_ON_DISARM
    EVENT_SCRIPT_PLACEABLE_ON_HEARTBEAT
    EVENT_SCRIPT_PLACEABLE_ON_INVENTORYDISTURBED
    EVENT_SCRIPT_PLACEABLE_ON_LEFT_CLICK
    EVENT_SCRIPT_PLACEABLE_ON_LOCK
    EVENT_SCRIPT_PLACEABLE_ON_MELEEATTACKED
    EVENT_SCRIPT_PLACEABLE_ON_OPEN
    EVENT_SCRIPT_PLACEABLE_ON_SPELLCASTAT
    EVENT_SCRIPT_PLACEABLE_ON_TRAPTRIGGERED
    EVENT_SCRIPT_PLACEABLE_ON_UNLOCK
    EVENT_SCRIPT_PLACEABLE_ON_USED
    EVENT_SCRIPT_PLACEABLE_ON_USER_DEFINED_EVENT
    EVENT_SCRIPT_STORE_ON_CLOSE
    EVENT_SCRIPT_STORE_ON_OPEN
    EVENT_SCRIPT_TRIGGER_ON_CLICKED
    EVENT_SCRIPT_TRIGGER_ON_DISARMED
    EVENT_SCRIPT_TRIGGER_ON_HEARTBEAT
    EVENT_SCRIPT_TRIGGER_ON_OBJECT_ENTER
    EVENT_SCRIPT_TRIGGER_ON_OBJECT_EXIT
    EVENT_SCRIPT_TRIGGER_ON_TRAPTRIGGERED
    EVENT_SCRIPT_TRIGGER_ON_USER_DEFINED_EVENT
    */

    default:
      Debug("Not hooked.", STRING_COLOR_RED);
    break;
  }
}

